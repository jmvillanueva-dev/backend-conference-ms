generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Database models
model Usuario {
  id        Int      @id @default(autoincrement())
  nombre    String   @db.VarChar(50)
  apellido  String   @db.VarChar(50)
  email     String   @unique @db.VarChar(50)
  password  String   @db.VarChar(200)
  isActive  Boolean  @default(false)
  createdAt DateTime @default(now()) @map("fecha_creacion")
  updatedAt DateTime @updatedAt @map("fecha_actualizacion")

  @@map("usuarios")
}

model Conferencista {
  id              Int    @id @default(autoincrement())
  nombre          String @db.VarChar(50)
  apellido        String @db.VarChar(50)
  cedula          String @db.VarChar(20)
  genero          String @db.VarChar(20)
  ciudad          String @db.VarChar(20)
  direccion       String @db.VarChar(200)
  fechaNacimiento String @map("fecha_nacimiento") @db.VarChar(50)
  telefono        String @db.VarChar(20)
  email           String @db.VarChar(50)
  empresa         String @db.VarChar(50)

  reservas Reserva[]

  @@map("conferencistas")
}

model Auditorio {
  id          Int     @id @default(autoincrement())
  codigo      String  @db.VarChar(20)
  nombre      String  @db.VarChar(50)
  ubicacion   String  @db.VarChar(50)
  capacidad   String  @db.VarChar(20)
  descripcion String? @db.VarChar(200)

  reservas Reserva[]

  @@map("auditorios")
}

model Reserva {
  id          Int     @id @default(autoincrement())
  codigo      String  @db.VarChar(20)
  descripcion String? @db.VarChar(200)

  conferencistaId Int           @map("conferencista_id")
  conferencista   Conferencista @relation(fields: [conferencistaId], references: [id])

  auditorioId Int       @map("auditorio_id")
  auditorio   Auditorio @relation(fields: [auditorioId], references: [id])

  @@map("reservas")
}